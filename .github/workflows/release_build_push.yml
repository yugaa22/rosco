name: Create Release on PR Merge and build

on:
  workflow_call:
  pull_request:
    types: [closed]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx6g -Xms6g
  CONTAINER_REGISTRY: quay.io/opsmxpublic


jobs:
  create_release:
    if: github.event.pull_request.merged == true
                      #&& github.event.pull_request.base.ref == '1.30.1'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get branch name
        id: get_branch_name
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"

      - name: Get previous tag
        id: get_previous_tag
        run: |
          last_tag=$(git describe --abbrev=0 --tags || echo "none")
          echo "::set-output name=last_tag::$last_tag"

      - name: Determine RC number
        id: determine_rc_number
        run: |
          last_tag=$INPUT_LAST_TAG
          branch_name=$INPUT_BRANCH_NAME
          if [[ $last_tag =~ $branch_name-rc([0-9]+) ]]; then
            rc_number=$((RegExp.$1 + 1))
          else
            rc_number=1
          fi
          echo "::set-output name=rc_number::$rc_number"
        shell: bash
        env:
          INPUT_LAST_TAG: ${{ steps.get_previous_tag.outputs.last_tag }}
          INPUT_BRANCH_NAME: ${{ steps.get_branch_name.outputs.branch }}
          
      - name: Extract Version from YAML
        id: extract_version
        run: |
          version=$(curl -s https://storage.googleapis.com/halconfig/bom/1.30.1.yml | yq '.services.rosco.version')
          echo "::set-output name=version::$version"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_branch_name.outputs.branch }}_v${{ steps.extract_version.outputs.version }}-rc${{ steps.determine_rc_number.outputs.rc_number }}
          release_name: "Branch: ${{ steps.get_branch_name.outputs.branch }} and tag: ${{ steps.get_branch_name.outputs.branch }}_v${{ steps.extract_version.outputs.version }}-rc${{ steps.determine_rc_number.outputs.rc_number }}"
          body: |
            This is an automatically generated release for PR ${{ github.event.pull_request.number }}.
            Add your release notes here.
          draft: false
          prerelease: false

  Build_code:
    needs: [create_release]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
              fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions/setup-java@v2
        with:
              java-version: 11
              distribution: 'zulu'
      - name: Prepare build variables
        id: build_variables
        run: |
              echo "::set-output name=REPO::ubi8-spin-rosco"
              echo "::set-output name=GITHASH::$(git rev-parse --short HEAD)"
              echo "::set-output name=BUILDDATE::$(date -u +"%Y%m%d%H%M")"
      - name: Login to Quay
        uses: docker/login-action@v1
            # use service account flow defined at: https://github.com/docker/login-action#service-account-based-authentication-1
        with:
              registry: quay.io
              username: ${{ secrets.QUAY_USERNAME }}
              password: ${{ secrets.QUAY_KEY }}

      - name: Build
        run: |
                
                ./gradlew --no-daemon -PenableCrossCompilerPlugin=true rosco-web:installDist -x test 

      - name: dockerBuildpush
        uses: docker/build-push-action@v2
        with:
              context: .
              file: docker/ubi8/Dockerfile
              push: true
              tags: |
                 "${{ env.CONTAINER_REGISTRY }}/${{ steps.build_variables.outputs.REPO }}:${{ steps.get_branch_name.outputs.branch }}_v${{ steps.extract_version.outputs.version }}-rc${{ steps.determine_rc_number.outputs.rc_number }}-${{ steps.build_variables.outputs.GITHASH }}-${{ steps.build_variables.outputs.BUILDDATE }}"

     
